{"version":3,"sources":["etch-a-sketch.js"],"names":["canvas","document","querySelector","ctx","getContext","shakeButton","MOVE_AMOUNT","width","height","x","Math","floor","random","y","console","log","lineJoin","lineCap","lineWidth","hue","strokeStyle","beginPath","moveTo","lineTo","stroke","draw","key","handleKey","e","includes","preventDefault","clearCanvas","classList","add","clearRect","addEventListener","remove","once","window"],"mappings":"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","file":"etch-a-sketch.85e6e434.js","sourceRoot":"..","sourcesContent":["// Select the elements on the page - canvas, shake button\r\nconst canvas = document.querySelector('#etch-a-sketch');\r\nconst ctx = canvas.getContext('2d');\r\nconst shakeButton = document.querySelector('.shake');\r\nconst MOVE_AMOUNT = 10;\r\n\r\n// Setup canvas for drawing\r\n// Make a variable called height and width from the same properties on our canvas\r\nconst { width, height } = canvas; \r\n\r\n// Create random X and Y starting points on the canvas\r\nlet x = Math.floor(Math.random() * width);\r\nlet y = Math.floor(Math.random() * height);\r\n\r\nconsole.log(width, height);\r\nctx.lineJoin = 'round';\r\nctx.lineCap = 'round';\r\nctx.lineWidth = MOVE_AMOUNT;\r\n\r\nlet hue = 0;\r\nctx.strokeStyle = `hsl(104, 100%, 50%)`;\r\nctx.beginPath(); // Start drawing\r\nctx.moveTo(x, y);\r\nctx.lineTo(x, y);\r\nctx.stroke();\r\n\r\n// Write a draw function\r\nfunction draw({ key }) {\r\n   // Increment the hue\r\n   hue += 10;\r\n   ctx.strokeStyle = `hsl(104, 100%, 50%)`;\r\n   console.log(key);\r\n   // Start the path\r\n   ctx.beginPath();\r\n   ctx.moveTo(x, y);\r\n   // Move our X and Y valeus depending on what user presses\r\n   switch (key) {\r\n      case 'ArrowUp':\r\n         y -= MOVE_AMOUNT;\r\n         break;\r\n      case 'ArrowRight':\r\n         x += MOVE_AMOUNT;\r\n         break;\r\n      case 'ArrowDown':\r\n         y += MOVE_AMOUNT;\r\n         break;\r\n      case 'ArrowLeft':\r\n         x -= MOVE_AMOUNT;\r\n         break;\r\n      default:\r\n         break;\r\n   }\r\n   ctx.lineTo(x, y);\r\n   ctx.stroke();\r\n};\r\n\r\n// Write handler for keys\r\nfunction handleKey(e) {\r\n   if (e.key.includes('Arrow')) {\r\n      e.preventDefault();\r\n      draw({ key: e.key });\r\n   }\r\n};\r\n\r\n// Clear / Shake function\r\nfunction clearCanvas() {\r\n   canvas.classList.add('shake');\r\n   ctx.clearRect(0, 0, width, height);\r\n   canvas.addEventListener('animationend', function() {\r\n      console.log('Shaking complete');\r\n      canvas.classList.remove('shake');\r\n   }, { once: true });\r\n};\r\n\r\n// Listen for arrow keys\r\nwindow.addEventListener('keydown', handleKey);\r\nshakeButton.addEventListener('click', clearCanvas);\r\n\r\n"]}